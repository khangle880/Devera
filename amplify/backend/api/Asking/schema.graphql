type Members @model @auth(rules: [{allow: public}]) {
  id: ID!
  avatarKey: String
}

type Task @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  description: String!
  createdAt: AWSDateTime
  dueDate: AWSDate
  isComplete: Boolean!
  userID: ID
  members: [String]
}

type ListItem @model @auth(rules: [{allow: public}]) @key(name: "byCheckList", fields: ["checklistID"]) {
  id: ID!
  description: String!
  isComplete: Boolean!
  checklistID: ID
}

type CheckList @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  todoList: [AWSJSON!]
  color: String!
  listItems: [ListItem] @connection(keyName: "byCheckList", fields: ["id"])
  createdAt: AWSDateTime
  userID: ID
}

type QuickNote @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  description: String!
  color: String!
  createdAt: AWSDateTime
  userID: ID
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  email: String
  avatarKey: String
  description: String
  quickNotes: [QuickNote] @connection(keyName: "byUser", fields: ["id"])
  checkLists: [CheckList] @connection(keyName: "byUser", fields: ["id"])
  tasks: [Task] @connection(keyName: "byUser", fields: ["id"])
}
 